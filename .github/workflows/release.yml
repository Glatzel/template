name: release

on:
  workflow_call:
    inputs:
      override:
        type: string
        required: true
      tag:
        type: string
        required: true
      have-changelog:
        type: boolean
        required: true
      assets:
        type: boolean
        required: true
      draft:
        type: boolean
        default: true

env:
  RELEASE_BODY_FILE: release_changelog.md

permissions:
  contents: write

jobs:
  create-release:
    if: ${{!failure()}}
    runs-on: ubuntu-latest
    steps:
      - id: check-tag
        run: |
          $tag="${{inputs.tag}}"
          Write-Output "tag: $tag"
          if("$tag" -match '^v\d+\.\d+\.\d+$' ){"IS_PRE_RELEASE=false" >> "$env:GITHUB_OUTPUT"}
          elseif("$tag" -match '^v\d+\.\d+\.\d+-.*$') {"IS_PRE_RELEASE=true" >> "$env:GITHUB_OUTPUT"}
          else{throw "Unknown version: '$tag'"}
        shell: pwsh

      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: clear-tag-and-release
        run: gh release delete ${{inputs.tag}} --cleanup-tag -y
        if: ${{inputs.override}}
        continue-on-error: true
        env:
          GH_TOKEN: ${{ github.token }}

      - name: download asset
        if: inputs.assets
        uses: actions/download-artifact@v6
        with:
          path: ./release_asset
          merge-multiple: true

      - name: Set up pixi
        uses: prefix-dev/setup-pixi@v0.9.2
        with:
          run-install: false

      - name: Generate a changelog
        run: |
          pixi global install git-cliff
          git-cliff --unreleased --tag ${{inputs.tag}} --strip header > ${{env.RELEASE_BODY_FILE}}

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: ${{inputs.have-changelog && null || env.RELEASE_BODY_FILE}}
          files: ${{inputs.assets=='' && null || './release_asset/**'}}
          tag_name: ${{inputs.tag}}
          draft: ${{inputs.draft}}
          prerelease: ${{steps.check-tag.outputs.is_pre_release}}
